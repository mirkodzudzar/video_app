{% extends "base.html.twig" %}

{% block main %}
<div class="row mt-5">

    {{include('front/includes/_cart.html.twig')}}

    <div class="col-md-8 order-md-1">
        <h4 class="mb-3">Register first (free)</h4>
        {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}
            <div class="row">
                <div class="col-md-6 mb-3">
                    {{form_label(form.name)}}
                    {{form_widget(form.name)}}
                    <div class="invalid-feedback">
                        {{form_errors(form.name)}}
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    {{form_label(form.last_name)}}
                    {{form_widget(form.last_name)}}
                    <div class="invalid-feedback">
                        {{form_errors(form.last_name)}}
                    </div>
                </div>
            </div>

            <div class="mb-3">
                {{form_label(form.email)}}
                {{form_widget(form.email)}}
                <div class="invalid-feedback">
                    {{form_errors(form.email)}}
                </div>
            </div>

            <div class="mb-3">
                {{form_label(form.password.first)}}
                {{form_widget(form.password.first)}}
                <div class="invalid-feedback">
                    {{form_errors(form.password.first)}}
                </div>
            </div>

            <div class="mb-3">
                {{form_label(form.password.second)}}
                {{form_widget(form.password.second)}}
                <div class="invalid-feedback">
                    {{form_errors(form.password.second)}}
                </div>
            </div>

            <hr class="mb-4">
            {{form_widget(form.save, {'attr': {'class': 'btn btn-primary btn-lg btn-block'}})}}
        {{ form_end(form) }}

    </div>
</div>

{% endblock %}

{% block customjavascripts %}

<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';

        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');

            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('click', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();


    var password = document.getElementById("user_password_first"), confirm_password = document.getElementById("user_password_second");

    function validatePassword() {
        if (password.value != confirm_password.value) {
            confirm_password.setCustomValidity("Passwords Don't Match");
        } else {
            confirm_password.setCustomValidity('');
        }
    }
    password.onchange = validatePassword;
    confirm_password.onkeyup = validatePassword;
</script>
{% endblock %}